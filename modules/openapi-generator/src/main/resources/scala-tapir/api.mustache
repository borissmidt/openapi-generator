{{>licenseInfo}}
package {{package}}

{{#imports}}
import {{import}}
{{/imports}}
import {{invokerPackage}}.JsonSupport._
import sttp.tapir._
import sttp.tapir.EndpointIO.annotations._
import sttp.model._
import scala.deprecated

{{#operations}}
object {{classname}} {
  val baseUrl: String = "{{{basePath}}}"
{{#operation}}
{{#javadocRenderer}}
{{>javadoc}}
{{/javadocRenderer}}

  @endpointInput("{{{path}}}")
  case class {{operationIdCamelCase}}Input (
  {{#authMethods}}
    {{#isBasicBasic}}
        @basic paramName: UsernamePassword
    {{/isBasicBasic}}
    {{#isBasicBearer}}
        @bearer {{>fieldEncoder}}
    {{/isBasicBearer}}
    {{#isKeyInCookie}}
        no cookie authentication implemented
    {{/isKeyInCookie}}
  {{/authMethods}}
  {{#requiredParams}}
    {{>paramType}} {{>fieldEncoder}}
  {{/requiredParams}}
  {{#optionalParams}}
    {{>paramType}} {{>fieldEncoder}}
  {{/optionalParams}}
  )

  object {{operationIdCamelCase}}Input{
    val endpointInput: EndpointInput[{{operationIdCamelCase}}Input] = EndpointInput.derived
  }

  case class {{operationIdCamelCase}}Output({{#responses}}{{#is2xx}}{{#headers}}
    @header {{>fieldEncoder}}{{/headers}}
    @jsonbody body {{>fieldEncoder}}{{/is2xx}}{{/responses}})
  object {{operationIdCamelCase}}Output{
    val endpointOutput: EndpointOutput[{{operationIdCamelCase}}Output] = EndpointOutput.derived
  }

  {{#isDeprecated}}@deprecated{{/isDeprecated}}
  val {{operationId}} = endpoint
      .method(Method.{{httpMethod.toUpperCase}})
      .in({{operationIdCamelCase}}Input.endpointInput)
      .out({{operationIdCamelCase}}Output.endpointOutput)
{{#hasErrorResponses}}
      .errorOut(oneOf[{{operationIdCamelCase}}Error](
          {{#responses}}
              {{^is2xx}}oneOfVariant(statusCode(StatusCode({{code}})){{#dataType}}.and(jsonBody[{{dataType}}]){{/dataType}}){{^-last}},{{/-last}}{{/is2xx}}
          {{/responses}}
       ))
{{/hasErrorResponses}}
{{/operation}}
}
{{/operations}}
